// Generated by view binder compiler. Do not edit!
package com.covidscape.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.covidscape.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class TestingBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView active;

  @NonNull
  public final TextView cured;

  @NonNull
  public final TextView death;

  @NonNull
  public final TextView incactive;

  @NonNull
  public final TextView inccured;

  @NonNull
  public final TextView incdeath;

  @NonNull
  public final TextView state;

  @NonNull
  public final TextView total;

  private TestingBinding(@NonNull RelativeLayout rootView, @NonNull TextView active,
      @NonNull TextView cured, @NonNull TextView death, @NonNull TextView incactive,
      @NonNull TextView inccured, @NonNull TextView incdeath, @NonNull TextView state,
      @NonNull TextView total) {
    this.rootView = rootView;
    this.active = active;
    this.cured = cured;
    this.death = death;
    this.incactive = incactive;
    this.inccured = inccured;
    this.incdeath = incdeath;
    this.state = state;
    this.total = total;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static TestingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static TestingBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.testing, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static TestingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.active;
      TextView active = rootView.findViewById(id);
      if (active == null) {
        break missingId;
      }

      id = R.id.cured;
      TextView cured = rootView.findViewById(id);
      if (cured == null) {
        break missingId;
      }

      id = R.id.death;
      TextView death = rootView.findViewById(id);
      if (death == null) {
        break missingId;
      }

      id = R.id.incactive;
      TextView incactive = rootView.findViewById(id);
      if (incactive == null) {
        break missingId;
      }

      id = R.id.inccured;
      TextView inccured = rootView.findViewById(id);
      if (inccured == null) {
        break missingId;
      }

      id = R.id.incdeath;
      TextView incdeath = rootView.findViewById(id);
      if (incdeath == null) {
        break missingId;
      }

      id = R.id.state;
      TextView state = rootView.findViewById(id);
      if (state == null) {
        break missingId;
      }

      id = R.id.total;
      TextView total = rootView.findViewById(id);
      if (total == null) {
        break missingId;
      }

      return new TestingBinding((RelativeLayout) rootView, active, cured, death, incactive,
          inccured, incdeath, state, total);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
